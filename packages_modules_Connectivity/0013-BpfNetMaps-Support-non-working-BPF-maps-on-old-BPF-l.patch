From e462aaa5bf9d82e6de57d57f7b3d7927bc847a52 Mon Sep 17 00:00:00 2001
From: Dominggoes Isakh <drjisakh@gmail.com>
Date: Mon, 13 Jan 2025 18:20:41 +0100
Subject: [PATCH 13/15] BpfNetMaps: Support non-working BPF maps on old
 BPF-less kernel

Change-Id: Ifddcc2cf08e6a9f57c791583c19aa5172c6d86c2
---
 service/src/com/android/server/BpfNetMaps.java | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/service/src/com/android/server/BpfNetMaps.java b/service/src/com/android/server/BpfNetMaps.java
index c6ff2682d1..57a8dae0ab 100644
--- a/service/src/com/android/server/BpfNetMaps.java
+++ b/service/src/com/android/server/BpfNetMaps.java
@@ -190,7 +190,7 @@ public class BpfNetMaps {
             return new BpfMap<>(
                     CONFIGURATION_MAP_PATH, S32.class, U32.class);
         } catch (ErrnoException e) {
-            throw new IllegalStateException("Cannot open netd configuration map", e);
+            return null;
         }
     }
 
@@ -200,7 +200,7 @@ public class BpfNetMaps {
             return new BpfMap<>(
                     UID_OWNER_MAP_PATH, S32.class, UidOwnerValue.class);
         } catch (ErrnoException e) {
-            throw new IllegalStateException("Cannot open uid owner map", e);
+            return null;
         }
     }
 
@@ -210,7 +210,7 @@ public class BpfNetMaps {
             return new BpfMap<>(
                     UID_PERMISSION_MAP_PATH, S32.class, U8.class);
         } catch (ErrnoException e) {
-            throw new IllegalStateException("Cannot open uid permission map", e);
+            return null;
         }
     }
 
@@ -220,7 +220,7 @@ public class BpfNetMaps {
             return new BpfMap<>(COOKIE_TAG_MAP_PATH,
                     CookieTagMapKey.class, CookieTagMapValue.class);
         } catch (ErrnoException e) {
-            throw new IllegalStateException("Cannot open cookie tag map", e);
+            return null;
         }
     }
 
@@ -230,7 +230,7 @@ public class BpfNetMaps {
             return new BpfMap<>(
                     DATA_SAVER_ENABLED_MAP_PATH, S32.class, U8.class);
         } catch (ErrnoException e) {
-            throw new IllegalStateException("Cannot open data saver enabled map", e);
+            return null;
         }
     }
 
@@ -240,7 +240,7 @@ public class BpfNetMaps {
             return new BpfMap<>(INGRESS_DISCARD_MAP_PATH,
                     IngressDiscardKey.class, IngressDiscardValue.class);
         } catch (ErrnoException e) {
-            throw new IllegalStateException("Cannot open ingress discard map", e);
+            return null;
         }
     }
 
-- 
2.37.2

